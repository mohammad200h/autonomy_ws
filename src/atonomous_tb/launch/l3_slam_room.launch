<?xml version="1.0"?>

<launch>
    <!-- Arguments -->
    <arg name="model" default="waffle_pi" doc="model type [burger, waffle, waffle_pi]"/>
    <arg name="multi_robot_name" default=""/>
                <!-- Gmapping -->
    <arg name="set_base_frame" default="base_footprint"/>
    <arg name="set_odom_frame" default="odom"/>
    <arg name="set_map_frame"  default="map"/>
    <!-- End::Arguments -->

    <include file="$(find gazebo_ros)/launch/empty_world.launch">  
        <arg name="world_name" value="$(find atonomous_tb)/worlds/room.world"/>
    </include>
    
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />

     <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
        <param name="publish_frequency" type="double" value="50.0" />
        <param name="tf_prefix" value="$(arg multi_robot_name)"/>
    </node>

    <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf" args="-urdf -model turtlebot3_$(arg model)  -param robot_description" />


     <!-- Gmapping -->
    <node pkg="gmapping" type="slam_gmapping" name="turtlebot3_slam_gmapping" output="screen">
      <param name="base_frame" value="$(arg set_base_frame)"/>
      <param name="odom_frame" value="$(arg set_odom_frame)"/>
      <param name="map_frame"  value="$(arg set_map_frame)"/>
      <rosparam command="load" file="$(find turtlebot3_slam)/config/gmapping_params.yaml" />
    </node>

    <node pkg="rviz" type="rviz" name="rviz" required="true"
          args="-d $(find turtlebot3_slam)/rviz/turtlebot3_gmapping.rviz"/>

    <node pkg="turtlebot3_teleop" type="turtlebot3_teleop_key" name="turtlebot3_teleop_keyboard"  output="screen">
    </node>

</launch>